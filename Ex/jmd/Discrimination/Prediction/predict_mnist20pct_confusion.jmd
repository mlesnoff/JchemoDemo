---
title: Prediction - mnist20pct - Confusion matrix 
weave_options:
  error: true
  wrap: true
  term: false
  out_width: 60%
  out_height: 30%
---

```julia term = true
using Jchemo, JchemoData
using JLD2, CairoMakie
using FreqTables 
using CodecZlib   # required since mnist20pct.jld2 is compressed 
```

#### Data importation

```julia term = true
path_jdat = dirname(dirname(pathof(JchemoData)))
db = joinpath(path_jdat, "data/mnist20pct.jld2") 
@load db dat
@names dat
```

```julia term = true
Xtrain = dat.Xtrain ;
ytrain = dat.ytrain ;
Xtest = dat.Xtest ;
ytest = dat.ytest ;
@head Xtrain
@head Xtest
tab(ytrain)
tab(ytest)
ntrain, p = size(Xtrain)
ntest = nro(Xtest)
ntot = ntrain + ntest ;
(ntot = ntot, ntrain, ntest)  
```

Grey levels 0-255 standardized between 0-1 (not required here but used when fitting deep learning models)

```julia term = true
Xtrain = Matrix(Xtrain) / 255 ;
Xtest = Matrix(Xtest) / 255 ;
```
Example of one sample (= one unfolded image)

```julia term = true
plotsp(Xtrain, 1:p; nsamp = 1, xlabel = "Pixel", ylabel = "Grey level").f
```

#### Fitting a Pls-Qda and prediction of the test set

```julia term = true
model = plsqda(nlv = 25)
fit!(model, Xtrain, ytrain)
pred = predict(model, Xtest).pred ;
```

Error rates (proportions)

```julia term = true
errp(pred, ytest)  # overall
merrp(pred, ytest) # average by class
```

#### Confusion matrix

Using function `freqtable` of package `FreqTables`

- Counts

```julia term = true
res = freqtable(ytest, vec(pred))
```

- Row %

```julia term = true
round.(100 * res ./ rowsum(res); digits = 1)
```

Using function `conf` of package `Jchemo`

```julia term = true
cf = conf(pred, ytest) ;
@names cf
```

- Counts

```julia term = true
cf.cnt
```

- Row %

```julia term = true
cf.pct
```

- Total error rate (%) in each class

```julia term = true
cf.diagpct
```

- Accurary (%) 

```julia term = true
cf.accpct
```

- Plotting 

```julia term = true
plotconf(cf).f
```

```julia term = true
plotconf(cf; cnt = false).f
```

