---
title: Prediction - forages2 - Rrda 
weave_options:
  error: true
  wrap: false
  term: false
  out_width: 60%
  out_height: 30%
---

```julia
using Jchemo, JchemoData
using JLD2, CairoMakie
using FreqTables 
```

RR-DA is a alternative to PLSR-DA, where ridge regression is used instead of PLSR to predict the Y-dummy table.

#### Data importation

```julia
path_jdat = dirname(dirname(pathof(JchemoData)))
db = joinpath(path_jdat, "data/forages2.jld2") 
@load db dat
@names dat
```

```julia
X = dat.X 
@head X 
```

```julia
Y = dat.Y
@head Y
```

```julia
y = Y.typ
test = Y.test
tab(y)
```

```julia
freqtable(y, test)
```

```julia
wlst = names(X)
wl = parse.(Int, wlst)
#plotsp(X, wl; xlabel = "Wavelength (nm)", ylabel = "Absorbance").f
```

**Note:**: X-data are already preprocessed (SNV + Savitsky-Golay 2nd deriv).

#### Split Tot to Train/Test

```julia
s = Bool.(test)
Xtrain = rmrow(X, s)
ytrain = rmrow(y, s)
Xtest = X[s, :]
ytest = y[s]
ntot = nro(X)
ntrain = nro(Xtrain)
ntest = nro(Xtest)
(ntot = ntot, ntrain, ntest)
```

```julia
tab(ytrain)
```

```julia
tab(ytest)
```

#### Model fitting

```julia
model = rrda(; lb = 1e-5)
fit!(model, Xtrain, ytrain)
@names model 
```

```julia
fitm = model.fitm
@names fitm
```

```julia
typeof(fitm.fitm)
```

```julia
@names fitm.fitm
```

```julia
res = predict(model, Xtest)
@names res
@head pred = res.pred
@head res.posterior   # predicted posterior probabilities
```

```julia
@head predict(model, Xtest).pred
```

```julia
predict(model, Xtest; lb = [.1, .01]).pred
```

```julia
errp(pred, ytest)
```

```julia
merrp(pred, ytest)
```

#### Confusion matrix

```julia
cf = conf(pred, ytest)
@names cf
```

```julia
cf.cnt
```

```julia
cf.pct
```

```julia
plotconf(cf).f
```


