---
title: octane - Pca introduction 
weave_options:
  error: true
  wrap: true
  term: false
  out_width: "60%" 
---

```julia
using Jchemo, JchemoData
using JLD2, CairoMakie, GLMakie
```

```julia
CairoMakie.activate!()
#GLMakie.activate!() 
```

#### Data importation

```julia
path_jdat = dirname(dirname(pathof(JchemoData)))
db = joinpath(path_jdat, "data/octane.jld2") 
@load db dat
@names dat
```

#### Data preparation and short description

```julia
X = dat.X 
n = nro(X)
```

```julia term = true
@head X
```

```julia
wlst = names(X)
wl = parse.(Float64, wlst) 
```

Six of the samples of the dataset contain added alcohol  (= 25, 26, and 36-39).

```julia
plotsp(X, wl; xlabel = "Wavelength (nm)", ylabel = "Absorbance", title = "Octane data").f
```

#### Pca model fitting

```julia
model = pcasvd(nlv = 6) 
## For robust Pca, do:
#model = pcasph; nlv = 6)
## or:
#model = pcaout; nlv = 6)
fit!(model, X)  
@names model
@names model.fitm
```

**Scores:**

```julia term = true
@head T = model.fitm.T 
```

**2-D score space** 

```julia
plotxy(T[:, 1], T[:, 2]; zeros = true, xlabel = "PC1", ylabel = "PC2").f
```

```julia
i = 1
plotxy(T[:, i], T[:, i + 1]; color = (:red, .5), xlabel = string("PC", i), 
    ylabel = string("PC", i + 1), zeros = true, markersize = 15).f
```

```julia
f = Figure(size = (600, 400))     
ax = list(4)
l = reshape(1:4, 2, 2)
for j = 1:2
    for k = 1:2
        zl = l[j, k]
        ax[zl] = Axis(f[j, k]; xlabel = string("PC", zl), ylabel = string("PC", zl + 1))
        scatter!(ax[zl], T[:, zl:(zl + 1)]; color = (:red, .5))
    end
end
f    
```

**3-D score space** 

```julia
CairoMakie.activate!()  
#GLMakie.activate!() 
```

```julia
i = 1
f = Figure(size = (700, 500))
ax = Axis3(f[1, 1]; perspectiveness = 0.2, xlabel = string("PC", i), 
    ylabel = string("PC", i + 1), zlabel = string("PC", i + 2), title = "Pca score space")
scatter!(ax, T[:, i], T[:, i + 1], T[:, i + 2]; markersize = 15)
f
```

```julia
CairoMakie.activate!()  
#GLMakie.activate!() 
```

```julia
i = 1
f = Figure(size = (700, 500))
ax = Axis3(f[1, 1]; perspectiveness = 0.2, xlabel = string("PC", i), 
    ylabel = string("PC", i + 1), zlabel = string("PC", i + 2), title = "Pca score space")
scatter!(ax, T[:, i], T[:, i + 1], T[:, i + 2]; markersize = 15)
text!(ax, T[:, i], T[:, i + 1], T[:, i + 2]; text = string.(1:n), fontsize = 15)
f
```


