---
title: descri_tecator.jl
weave_options:
  error: true
  wrap: true
  term: false
  #out_width: "50%"   # default
---

```julia
using Jchemo, JchemoData
using JLD2, CairoMakie
```

#### Data importation

```julia
path_jdat = dirname(dirname(pathof(JchemoData)))
db = joinpath(path_jdat, "data/tecator.jld2") 
@load db dat
pnames(dat)
```

#### Data preparation and short description

```julia
X = dat.X
Y = dat.Y 
ntot = nro(X)
```

```julia term = true
@head X
@head Y
```

```julia
summ(Y)
```

```julia
namy = names(Y)[1:3]
```

```julia
typ = Y.typ
tab(typ)
```

```julia
wlst = names(X)
wl = parse.(Float64, wlst) 
```

```julia
plotsp(X, wl; xlabel = "Wavelength (nm)", ylabel = "Absorbance").f
```

#### Preprocessing

```julia
model1 = snv()
model2 = savgol(npoint = 15, deriv = 2, degree = 3)
model = pip(model1, model2)
fit!(model, X)
Xp = transf(model, X) 
```

```julia
plotsp(Xp, wl; xlabel = "Wavelength (nm)", ylabel = "Absorbance").f
```

#### PCA

```julia
model = pcasvd(nlv = 10)
fit!(model, X)
pnames(model)
pnames(model.fitm)
```

```julia
res = summary(model, Xp) ;
pnames(res)
```

```julia
z = res.explvarx
plotgrid(z.nlv, 100 * z.pvar; step = 1, xlabel = "Nb. PCs", ylabel = "% variance explained").f
```

```julia term = true
@head T = model.fitm.T
```

```julia
i = 1
plotxy(T[:, i], T[:, i + 1]; color = (:red, .5), xlabel = "PC1", ylabel = "PC2").f
```

```julia
plotxy(T[:, i], T[:, i + 1], typ; xlabel = "PC1", ylabel = "PC2").f
```

#### Y-variables

```julia
summ(Y[:, namy]).res
```

```julia
aggstat(Y; vars = namy, groups = :typ)
```

```julia
j = 2
nam = namy[2]  # y-variable
```

```julia
y = Y[:, nam]
```

```julia
mlev(typ)
ztyp = recod_catbyint(typ)
```

```julia
tab(string.(ztyp, "-", typ))
```

```julia
f = Figure(size = (500, 400))
ax = Axis(f[1, 1]; xticks = (1:3, mlev(typ)), xlabel = "Group", ylabel = nam)
boxplot!(ax, ztyp, y; width = .5, show_notch = true)
f
```

