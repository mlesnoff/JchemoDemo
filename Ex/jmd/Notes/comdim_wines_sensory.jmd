---
title: ComDim - wines_sensory
weave_options:
  error: true
  wrap: false
  term: false
  out_width: 60%
  out_height: 30%
---

This note replicates the analysis of the **wines sensory dataset** presented 
by [Hanafi & Quanari (2008)](https://www.numdam.org/item/JSFS_2008__149_2_75_0/)

* Hanafi, M., Qannari, E.M., 2008. Nouvelles propriétés de l’analyse en composantes communes 
    et poids spécifiques. Journal de la société française de statistique 149, 75–97

where the **ComDim** method (Common components and specific weights analysis, *aka* CCSWA) was used to 
explore the data.

[Wines sensory dataset](https://github.com/mlesnoff/JchemoData.jl/tree/main?tab=readme-ov-file#wines_sensory): 
A jury of four expert tasters ("judges") evaluated the appearance of eight wines according to the procedure 
known as *free profile*. Each judge noted on a scale from 0 to 10 the products according to his/her **own** variables. 
For a product and a given variable, the note given by a judge was the intensity on which
he/she perceives the variable. Each matrix Xk (k = 1, ..., 4) was associated to one judge. 

The goal of the ComDim study was to evaluate if there was an agreement between judges (or groups of judges), 
and to evaluate the relationships potentially existing among the eight wines.

#### Data importation

```julia
using Jchemo, JchemoData
using JLD2, CairoMakie
```

```julia
path_jdat = dirname(dirname(pathof(JchemoData)))
db = joinpath(path_jdat, "data/wines_sensory.jld2")
@load db dat
@names dat
```

```julia
X1 = dat.X1 
X2 = dat.X2
X3 = dat.X3
X4 = dat.X4
Xbl = [X1, X2, X3, X4]   # Same as: Xbl = [[X1]; [X2]; [X3]; [X4]]
```

```julia
n = nro(X1)
nbl = length(Xbl)
```

#### Model fitting

In the ComDim analysis below, each block is scaled by its Frobenius norm (to equalize the group importances 
in regards to their total inertia), and three global components (scores) are computed

```julia
nlv = 3
bscal = :frob
model = comdim(; nlv, bscal)
fit!(model, Xbl)
fitm = model.fitm
@names fitm
```

- Global scores

```julia
@head T = fitm.T
```

```julia 
i = 1  # define the pair of successive components 
f, ax = plotxy(T[:, i], T[:, i + 1]; zeros = true, xlabel = "PC$i", ylabel = "PC$(i + 1)") 
text!(ax, T[:, i], T[:, i + 1]; text = string.("wi", 1:n), fontsize = 15)
f
```

- Block scores

```julia
Tbl = fitm.Tbl
```

- Block loadings

```julia
Vbl = fitm.Vbl
```
- For block *k*

```julia
k = 1
Tbl[k]
```

```julia
Vbl[k]
```
#### Summary outputs

```julia
res = summary(model, Xbl)
@names res
```

- Proportion of the total XX' inertia explained by the global scores

```julia
res.explvarxx
```

- Proportion of the inertia of each block (= Xbl[k]) explained by the global scores

```julia
explxbl = res.explxbl  # = specific weights 'lb' when 'bscal = :frob'
```

```julia 
rowsum(explxbl)
```

- Contribution of each block to the global scores

```julia
contrxbl2t = res.contrxbl2t
```

```julia 
colsum(contrxbl2t)
```

```julia 
z = contrxbl2t
i = 1
f, ax = plotxy(z[:, i], z[:, i + 1]; zeros = true, xlabel = "PC$i", ylabel = "PC$(i + 1)") 
text!(ax, z[:, i], z[:, i + 1]; text = string.("ju", 1:nbl), fontsize = 15) 
xlims!(ax, [0, .4]) 
ylims!(ax, [0, .9]) 
f
```

- RV coefficients between each block and the global LVs

```julia
res.rvxbl2t
```

- Correlation between the X-variables and the global scores

```julia
corx2t = res.corx2t
```

```julia 
z = corx2t 
nvar = nro(z) 
i = 1
f, ax = plotxy(z[:, i], z[:, i + 1]; zeros = true, xlabel = "PC$i", ylabel = "PC$(i + 1)") 
text!(ax, z[:, i], z[:, i + 1]; text = string.("va", 1:nvar), fontsize = 15) 
xlims!(ax, [-1, 1]) 
ylims!(ax, [-1, 1]) 
f
```

#### Simultaneous representation of observations and loadings

- Block *k* in the global score space 

```julia 
k = 4
v = Vbl[k]
nam = names(Xbl[k])
i = 1
f, ax = plotxy(T[:, i], T[:, i + 1]; zeros = true, title = "Block$k", xlabel = "PC$i", ylabel = "PC$(i + 1)") 
text!(ax, T[:, i], T[:, i + 1]; text = string.("wi", 1:n), fontsize = 15) 
scatter!(ax, v[:, i], v[:, i + 1]) 
text!(ax, v[:, i], v[:, i + 1]; text = nam, fontsize = 15) 
ylims!(ax, [-1, 1]) 
f
```

- Block *k* in the block score space 

```julia
k = 4  # example of the fourth block
z = Tbl[k] 
v = Vbl[k] 
nam = names(Xbl[k]) 
i = 1
f, ax = plotxy(z[:, i], z[:, i + 1]; zeros = true, title = "Block$k", xlabel = "PC$i", ylabel = "PC$(i + 1)") 
text!(ax, z[:, i], z[:, i + 1]; text = string.("wi", 1:n), fontsize = 15) 
scatter!(ax, v[:, i], v[:, i + 1]) 
text!(ax, v[:, i], v[:, i + 1]; text = nam, fontsize = 15) 
ylims!(ax, [-1, 1]) 
f
```

#### Main conclusion of the study

Judge *4* was atypical from the other judges and determined the global score *2*. In contrast to judges *1-2-3*, 
judge *4* gave high ratings to wines *wi6* and *wi8* (variables *v13: expenses* *v14: brilliant*).


