---
title: iris - Fda
weave_options:
  error: true
  wrap: true
  term: false
  out_width: "60%" 
---

```julia
using Jchemo, JchemoData
using JLD2, CairoMakie
```

#### Data importation

```julia
path_jdat = dirname(dirname(pathof(JchemoData)))
db = joinpath(path_jdat, "data", "iris.jld2") 
@load db dat
@names dat
```

#### Data preparation and short description

```julia
summ(dat.X)
```

```julia
X = dat.X[:, 1:4] 
y = dat.X[:, 5]
n = nro(X)
```
  
```julia term = true
@head X
```

```julia
tab(y)
```

```julia
lev = mlev(y)
```

```julia
nlev = length(lev)
```

#### Split Tot ==> Train + Test

The model is fitted on **Train**, and the generalization error is estimated on **Test**.
Here the split of **Tot** is already provided inside the dataset (= variable `test`), 
but **Tot** could also be split *a posteriori*, for instance by sampling (random, systematic 
or any other designs). 

```julia
ntest = 30
s = samprand(n, ntest)
Xtrain = X[s.train, :]
ytrain = y[s.train]
Xtest = X[s.test, :]
ytest = y[s.test]
```

```julia
tab(ytrain)
```

```julia
tab(ytest)
```

#### Model fitting

```julia
model = fda(nlv = 2)
#model = fdasvd(nlv = 2)     # alternative algorithm (same result)
fit!(model, Xtrain, ytrain) 
fitm = model.fitm 
@names fitm
```

```julia
lev = fitm.lev
```

```julia
nlev = length(lev)
```

**Fda scores**

```julia term = true
@head Ttrain = model.fitm.T
```

**Class centers projected on the score space**

```julia
ct = model.fitm.Tcenters
```

```julia
f, ax = plotxy(Ttrain[:, 1], Ttrain[:, 2], ytrain; ellipse = true, title = "Fda", zeros = true)
scatter!(ax, ct[:, 1], ct[:, 2], markersize = 10, color = :red)
f
```

#### Projection of Xtest to the score space

```julia
@head Ttest = transf(model, Xtest)
```

#### X-loadings matrix

Columns of matrix `V` = coefficients of the linear discriminant function 
= "LD" of function lda of the R package MASS.

```julia
V = model.fitm.V
```

```julia
V' * V    # not orthogonal
```


#### Explained variance 

```julia
model.fitm.eig
```

```julia
model.fitm.sstot
```

Explained variance is computed from the Pca of the class centers 
in the transformed scale.

```julia
summary(model)
```

